{
    "contents" : "\nlibrary(reshape)\nlibrary(ggplot2)\nage.sub$name<-1:74\nremove(dfr)\nhead(age.sub)\nage.sub[,1] <- as.Date(x=paste(\"1-\",age.sub[,1], sep=\"\"), format=\"%d-%b-%y\")\nage.sub[,2] <- as.Date(x=paste(\"1-\",age.sub[,2], sep=\"\"), format=\"%d-%b-%y\")\nage.sub$\"# of case by date of confirmation\"<-as.numeric(age.sub$\"# of case by date of confirmation\")\nmdfr <- melt(age.sub, measure.vars = c(\"start\", \"end\"))\n\nnew<-melt(mdfr[,c(4:7)],id=c(\"variable\",\"value\"))\ncolnames(new)<-c(\"variable\",\"value\",\"type\",\"data\")\n#mdfr$\"# of case by date of confirmation\"<-as.numeric(mdfr$\"# of case by date of confirmation\")\nggplot(mdfr, aes(mdfr$value,as.factor(mdfr$\"# of case by date of confirmation\"))) + \n  geom_line(size = 6) +\n  xlab(\"period\") + ylab(\"number of cases by date of restriction\") +\n  theme_bw()\n\npd <- position_dodge(0.1)\nggplot(data = new, aes(x = value, y = as.numeric(data), colour = type)) + geom_line(position = pd, aes(group = variable))\n\n\n\np+ facet_grid(. ~ new$type)\nsapply(try, function(x) !all(is.na(as.Date(as.character(x),format=\"%b-%y\"))))\ntry[,1] <- as.Date(x=paste(\"1-\",try[,1], sep=\"\"), format=\"%d-%b-%y\")\ntry[,2] <- as.Date(x=paste(\"1-\",try[,2], sep=\"\"), format=\"%d-%b-%y\")\np <- ggplot(new, aes(new$value,as.numeric(new[,2]))) + geom_point()\n# With one variable\np + facet_grid(. ~as.numeric(mdfr[,1]))\np <- ggplot(mtcars, aes(mpg, wt)) + geom_point()\np + facet_grid(. ~ cyl)\nggplot()+ facet_grid(data=new,aes(value,type))\nggplot(mdfr, aes(as.Date(value, \"%d-%b-%y\"), name)) + \n  geom_line(size = 6) +\n  xlab(\"\") + ylab(\"\") +\n  theme_bw()\nmdfr$value[order(sort(as.numeric(mdfr$\"# of case by date of confirmation\")))]\na<-order(mdfr$value[order(sort(as.numeric(mdfr$\"# of case by date of confirmation\")))])\n#trend of passive surveillance\n\n\n\n\n###############distribution of passive surveillance######################################################################################\n\nuk<-readShapeSpatial('E:/585x/uk/map.shp')\n\n\nxxx <- thinnedSpatialPoly(as(uk, \"SpatialPolygons\"), tolerance = 0.1, minarea = 0.001, topologyPreserve = TRUE)\n#Read polygons\nextractPolygons <- function(shapes) {\n  require(plyr)\n  \n  dframe <- ldply(1:length(shapes@polygons), function(i) {\n    ob <- shapes@polygons[[i]]@Polygons\n    dframe <- ldply(1:length(ob), function(j) {\n      x <- ob[[j]]\n      co <- x@coords\n      data.frame(co, order = 1:nrow(co), group = j)\n    })\n    dframe$region <- i\n    dframe\n  })\n  \n  # construct a group variable from both group and polygon:\n  dframe$group <- interaction(dframe$region, dframe$group)\n  \n  dframe\n}\noz <- extractPolygons(xxx)\nggplot(oz, aes(x = x, y = y, group = group)) + \n  geom_polygon(colour='black', fill='white')\nuk@data$MM_UID<-1:192\noz.new<- merge(oz, uk@data, by.x = \"region\", by.y = \"MM_UID\")\nsort(city$COUNTY)\nsort(unique(oz.new$NAME2))\nggplot(oz.new, aes(x = x, y = y, group = group)) + \n  geom_polygon(colour='black', fill='white')\n\n#Clean the data\ncity$COUNTY<-gsub(\"&\",\"and\",city$COUNTY)\ncity$COUNTY[city$COUNTY==\"Ayrshire\" ]<-\"South Ayrshire\"           \ncity$COUNTY[city$COUNTY==\"Cornwall and Isles of Scilly\" ]<-\"Cornwall\"    \ncity$COUNTY[city$COUNTY==\"East Riding and Northern Lincolnshire\" ]<-\"North Lincolnshire\" \ncity$COUNTY[city$COUNTY==\"Eileanan an lar\"]<-\"Eilean Siar\"  \ncity$COUNTY[city$COUNTY==\"Greater London\"]<-\"London\" \ncity$COUNTY[city$COUNTY==\"Greater Manchester\"]<-\"Manchester\"\ncity$COUNTY[city$COUNTY==\"Gloucestershire excl South\"]<-\"South Gloucestershire\"\ncity$COUNTY[city$COUNTY==\"Leicestershire and Rutland\"]<-\"Leicestershire\"\ncity$COUNTY[city$COUNTY==\"Lincolnshire excl North\"]<-\"North Lincolnshire\"\ncity$COUNTY[city$COUNTY==\"North-East Scotland\"]<-\"Arberdeen\"\ncity$COUNTY[city$COUNTY==\"North-East Wales\"]<-\"Herefordnshire\"\ncity$COUNTY[city$COUNTY==\"North-West Wales\"]<-\"Ceredigion\"\ncity$COUNTY[city$COUNTY==\"Northern Somerset and South Glouceste\"]<-\"Northern Somerset\"\ncity$COUNTY[city$COUNTY==\"Somerset excl North\"]<-\"North Somerset\"\ncity$COUNTY[city$COUNTY==\"South Wales\"]<-\"Cardiff\"\ncolnames(city)<-c(\"region\",\"farms\",\"cases\")\n#merge two files \ndistribution<-merge(oz.subset,city,by=\"region\")\noz.subset<-oz.new[,c(2:5,7,8,9)]\ncolnames(oz.subset)<-c(\"x\",\"y\",\"order\",\"group\",\"area\",\"region\",\"division\")\n#distribution of farms and BSE cases \ndistribution$cases<-as.numeric(distribution$cases)\nggplot()+geom_polygon(data=oz.new, aes(x = x, y = y, order = order, group = group))+ \n  geom_polygon(data = distribution, aes(x = x,y = y,order = order, group = group,fill =distribution$cases))\n\ndistribution$farms<-as.numeric(distribution$farms)\nggplot()+geom_polygon(data=oz.new, aes(x = x, y = y, order = order, group = group))+ \n  geom_polygon(data = distribution, aes(x = x,y = y,order = order, group = group,fill =distribution$farms))\n#percent reduction\nhead(trend)\nred<-trend[,c(1,2,8)]\nred$\"percent reduction year on year(suspected)\"<-NA\nred$\"percent reduction year on year(confirmed)\"<-NA\ni<-NA\nj<-NA\nper<-NA\nred[1:28,2:3]<-as.matrix(sapply(red[1:28,2:3], as.numeric))  \npercent <- function(x, digits = 2, format = \"f\", ...)\n{\n  paste(formatC(100 * x, format = format, digits = digits, ...), \"%\", sep = \"\")\n}\n\nfor (i in 3:(length(red$SUSPECTS.RESTRICTED))){\n  \n  red$\"percent reduction year on year(suspected)\"[i]<-as.numeric((-red$SUSPECTS.RESTRICTED[i-1]+red$SUSPECTS.RESTRICTED[i])/red$SUSPECTS.RESTRICTED[i-1])\n  red$\"percent reduction year on year(confirmed)\"[i]<-as.numeric((-red$SLAUGHTERED.SUSPECTS.IN.WHICH.BSE.CONFIRMED[i-1]+red$SLAUGHTERED.SUSPECTS.IN.WHICH.BSE.CONFIRMED[i])/red$SLAUGHTERED.SUSPECTS.IN.WHICH.BSE.CONFIRMED[i-1])\n  if (red$\"SLAUGHTERED.SUSPECTS.IN.WHICH.BSE.CONFIRMED\"[i-1]==0){red$\"percent reduction year on year(confirmed)\"[i]<-0}\n}\n\nred.melt<-melt(red[,c(1,4,5)],id=c(\"YEAR\"))\nred.melt$value<-as.numeric(red.melt$value)\nred.melt$value[is.na(red.melt$value)] <- 0\npd <- position_dodge(0.1)\nggplot(data = red.melt, aes(x = YEAR, y = value, colour = variable)) + geom_line(position = pd, aes(group = variable))\n\n#age in great britain\nage<-read.csv(\"C:/Users/sding/Documents/GitHub/585xproject/age.gb.csv\")\nage<-age[-1,-2]\nage$\"Birth Period\"<-1982:2006\ncolnames(age)<-c(\"Birth Period\",\"1 year old\",\"2 year old\",\"3 year old\",\"4 year old\",\"5 year old\",\"6 year old\",\"7 year old\",\"8 year old\",\"9 year old\",\"10 year old\")\nage.melt<-melt(age,id=\"Birth Period\")\nage.melt$value<-as.numeric(age.melt$value)\nage.melt$\"Birth Period\"<-as.numeric(age.melt$\"Birth Period\")\nage.melt$\"variable\"<-as.factor(age.melt$\"variable\")\nqplot()\npd <- position_dodge(0.1)\nggplot(data =age.melt, aes(x =age.melt$\"Birth Period\", y =value, colour = variable)) + geom_line(position = pd, aes(group = variable))\n```\n\n# In recent two years\nrecent<-read.csv(\"C:/Users/sding/Documents/GitHub/585xproject/recent.csv\")\na<-recent[-1,c(1,2,3,4)]\nrecent[,c(2,3,4)]<-as.matrix(sapply(recent[,c(2,3,4)], as.numeric))  \na$cases<-rowSums(recent[-1,c(2,3,4)])\na$County<-gsub(\"&\",\"and\",a$County)\na<-a[,-c(2,3,4)]\na$County[a$County==\"North-West Wales\"]<-\"Ceredigion\"\ncolnames(a)<-c(\"region\",\"cases\")\n\nrec.dis<-merge(oz.subset,a,by=\"region\")\nrec.dis$cases<-as.numeric(rec.dis$cases)\nggplot()+geom_polygon(data=oz.subset, aes(x = x, y = y, order = order, group = group))+ \n  geom_polygon(data =rec.dis, aes(x = x,y = y,order = order, group = group,fill =rec.dis$cases))",
    "created" : 1396563827322.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3144583313",
    "id" : "ACB252E9",
    "lastKnownWriteTime" : 1396987028,
    "path" : "~/GitHub/585xproject/1231.R",
    "project_path" : "1231.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}